import React, { useState } from 'react'
import { Link, useNavigate } from 'react-router-dom'
import "./login.scss"
import { AuthenticationRequest } from '../../models/AuthenticationRequest'
import { AuthenticationResponse } from '../../models/AuthenticationResponse'
import { AuthenticationService } from '../../serives/AuthenticationService'
import { VerificationRequest } from '../../models/VerificationRequest'

const LoginComponent: React.FC = () => {

  const [authRequest, setAuthRequest] = useState<AuthenticationRequest>({});
  const [otpCode, setOtpCode] = useState('');
  const [authResponse, setAuthResponse] = useState<AuthenticationResponse>({});
  const navigate = useNavigate();

  const authenticate = async (e: React.FormEvent) => {
    e.preventDefault();
    try {
      const response = await AuthenticationService.login(authRequest);
      if (response) {    
        setAuthResponse(response);
      }

      if (!response.mfaEnabled) {
        localStorage.setItem('token', response.accessToken as string);
        navigate('/welcome');
      }
    } catch (error) {
      console.error('Authentication error:', error);
    }
  };

  const verifyTfa = async () => {
    const verifyRequest: VerificationRequest = {
      email: authRequest.email,
      code: otpCode,
    };

    try {
      const response = await AuthenticationService.verifyCode(verifyRequest);

      localStorage.setItem('token', response.accessToken as string);
      navigate('/welcome');
    } catch (error) {
      console.error('Verification error:', error);
    }
  };
  return (
    <>
      {!authResponse.mfaEnabled && (
        <div className="container">
          <h2>Login</h2>
          <form onSubmit={authenticate}>
            <div className="form-group">
              <label htmlFor="username">Email</label>
              <input type="text" id='username' name='username' required value={authRequest.email || ''} onChange={(e) => setAuthRequest({ ...authRequest, email: e.target.value })} />
            </div>
            <div className="form-group">
              <label htmlFor="password">Password</label>
              <input type="password" id='password' name='password' required value={authRequest.password || ''} onChange={(e) => setAuthRequest({ ...authRequest, password: e.target.value })} />
            </div>
            <button type='submit'>Login</button>
            <Link to="/register">Register</Link>
          </form>
        </div>
      )}
      {authResponse.mfaEnabled && (
        <div className="container">
          <h2>Two-Factor Authentication</h2>
          <div className="form-group">
            <label htmlFor="validationCode">Enter 6 digits Validation Code Generated by the app</label>
            <input required type="text" name="validationCode" id="validationCode" value={otpCode} onChange={(e) => setOtpCode(e.target.value)} />
          </div>
          <button className={otpCode.length < 6 ? 'button-disabled' : ''} type='button' onClick={verifyTfa}>Verify code</button>
        </div>)}
    </>
  )
}

export default LoginComponent
